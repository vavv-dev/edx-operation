# Generated by Django 4.2 on 2024-01-02 02:04

from django.db import migrations, models
import django.db.models.deletion
import edx_operation.apps.core.utils.common
import hitcount.models
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("course", "0001_initial"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProgramCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProgramHome",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(blank=True, null=True, verbose_name="간략한 설명"),
                ),
                (
                    "content",
                    wagtail.fields.RichTextField(
                        blank=True, null=True, verbose_name="내용"
                    ),
                ),
            ],
            options={
                "verbose_name": "프로그램",
                "verbose_name_plural": "프로그램",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ProgramPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "richtext",
                                wagtail.blocks.RichTextBlock(
                                    label="에디터", required=False
                                ),
                            ),
                            (
                                "html",
                                wagtail.blocks.RawHTMLBlock(
                                    label="HTML 코드", required=False
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="내용",
                    ),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="상단 정렬")),
                (
                    "external_link",
                    models.URLField(
                        blank=True, max_length=254, null=True, verbose_name="외부 링크"
                    ),
                ),
                (
                    "allow_comments",
                    models.BooleanField(default=True, verbose_name="댓글 사용하기"),
                ),
                (
                    "sku",
                    models.CharField(
                        default=edx_operation.apps.core.utils.common.secure_redeem_code,
                        unique=True,
                        verbose_name="프로그램 코드",
                    ),
                ),
                (
                    "enrollment_days",
                    models.SmallIntegerField(default=0, verbose_name="수강 기간"),
                ),
                ("price", models.PositiveBigIntegerField(default=0, verbose_name="가격")),
                (
                    "tuition_assistances",
                    wagtail.fields.StreamField(
                        [
                            (
                                "tuition_assistance",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "policy",
                                            wagtail.blocks.CharBlock(label="교육비 지원 제도"),
                                        ),
                                        (
                                            "assistance",
                                            wagtail.contrib.table_block.blocks.TableBlock(
                                                label="지원 내용"
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="교육비 지원",
                    ),
                ),
                (
                    "tutor",
                    wagtail.fields.StreamField(
                        [
                            (
                                "tutor",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="사진", required=False
                                            ),
                                        ),
                                        ("name", wagtail.blocks.CharBlock(label="이름")),
                                        (
                                            "bio",
                                            wagtail.blocks.RichTextBlock(
                                                label="바이오", required=False
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="교강사",
                    ),
                ),
                (
                    "textbook",
                    wagtail.fields.StreamField(
                        [
                            (
                                "textbook",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="제목")),
                                        (
                                            "author",
                                            wagtail.blocks.CharBlock(label="저자"),
                                        ),
                                        (
                                            "publisher",
                                            wagtail.blocks.CharBlock(label="출판사"),
                                        ),
                                        (
                                            "published_date",
                                            wagtail.blocks.DateBlock(
                                                label="출간일", required=False
                                            ),
                                        ),
                                        (
                                            "isbn",
                                            wagtail.blocks.CharBlock(label="ISBN"),
                                        ),
                                        (
                                            "price",
                                            wagtail.blocks.IntegerBlock(label="가격"),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="교재",
                    ),
                ),
                (
                    "cover",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "프로그램",
                "verbose_name_plural": "프로그램",
            },
            bases=("wagtailcore.page", hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name="Course",
            fields=[],
            options={
                "verbose_name": "과정",
                "verbose_name_plural": "과정",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=(wagtail.search.index.Indexed, "course.course"),
        ),
        migrations.CreateModel(
            name="ProgramProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "program",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_programs",
                        to="program.programpage",
                    ),
                ),
                (
                    "related_program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="program.programpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
