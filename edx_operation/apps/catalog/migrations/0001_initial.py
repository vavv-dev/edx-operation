# Generated by Django 4.2 on 2024-01-02 02:04

from django.db import migrations, models
import django.db.models.deletion
import hitcount.models
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
    ]

    operations = [
        migrations.CreateModel(
            name="CatalogCreateTask",
            fields=[
                (
                    "task_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "카탈로그 생성 작업",
                "verbose_name_plural": "카탈로그 생성 작업",
            },
            bases=("wagtailcore.task",),
        ),
        migrations.CreateModel(
            name="CatalogCreateTaskState",
            fields=[
                (
                    "taskstate_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.taskstate",
                    ),
                ),
            ],
            options={
                "verbose_name": "카탈로그 생성 작업 상태",
                "verbose_name_plural": "카탈로그 생성 작업 상태",
            },
            bases=("wagtailcore.taskstate",),
        ),
        migrations.CreateModel(
            name="CatalogHome",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(blank=True, null=True, verbose_name="간략한 설명"),
                ),
                (
                    "content",
                    wagtail.fields.RichTextField(
                        blank=True, null=True, verbose_name="내용"
                    ),
                ),
            ],
            options={
                "verbose_name": "카탈로그",
                "verbose_name_plural": "카탈로그",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="CatalogPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "richtext",
                                wagtail.blocks.RichTextBlock(
                                    label="에디터", required=False
                                ),
                            ),
                            (
                                "html",
                                wagtail.blocks.RawHTMLBlock(
                                    label="HTML 코드", required=False
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="내용",
                    ),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="상단 정렬")),
                (
                    "external_link",
                    models.URLField(
                        blank=True, max_length=254, null=True, verbose_name="외부 링크"
                    ),
                ),
                (
                    "allow_comments",
                    models.BooleanField(default=True, verbose_name="댓글 사용하기"),
                ),
                (
                    "dpi",
                    models.IntegerField(
                        choices=[(150, "저화질"), (300, "일반 화질"), (600, "고화질")],
                        default=300,
                        verbose_name="pdf 해상도",
                    ),
                ),
                (
                    "image_page",
                    wagtail.fields.StreamField(
                        [
                            (
                                "image_page",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                help_text="목차에 표시될 페이지 제목",
                                                label="페이지 제목",
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="300dpi A4 사이즈: 2481x3507 픽셀, 600dpi A4 사이즈: 4962x7014 픽셀",
                                                label="페이지 이미지",
                                            ),
                                        ),
                                        (
                                            "insert_to",
                                            wagtail.blocks.IntegerBlock(
                                                label="삽입할 위치 페이지 번호"
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="이미지 페이지 삽입",
                    ),
                ),
                (
                    "page_logo",
                    wagtail.fields.StreamField(
                        [
                            (
                                "catalog_page_logo",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="300dpi 세로 1cm 사이즈: 118 픽셀, 600dpi 세로 1cm 사이즈: 236 픽셀",
                                                label="페이지 로고 이미지",
                                            ),
                                        ),
                                        (
                                            "apply_to_pages",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("odd", "홀수 페이지"),
                                                    ("even", "짝수 페이지"),
                                                    ("all", "모든 페이지"),
                                                ],
                                                label="적용할 페이지",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "apply_to_specific_pages",
                                            wagtail.blocks.CharBlock(
                                                help_text="ex. 11, 23, 22",
                                                label="적용할 특정 페이지",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="페이지 로고",
                    ),
                ),
                (
                    "page_background",
                    wagtail.fields.StreamField(
                        [
                            (
                                "catalog_page_background",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="300dpi A4 사이즈: 2481x3507 픽셀, 600dpi A4 사이즈: 4962x7014 픽셀",
                                                label="페이지 배경 이미지",
                                            ),
                                        ),
                                        (
                                            "apply_to_pages",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("odd", "홀수 페이지"),
                                                    ("even", "짝수 페이지"),
                                                    ("all", "모든 페이지"),
                                                ],
                                                label="적용할 페이지",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "apply_to_specific_pages",
                                            wagtail.blocks.CharBlock(
                                                help_text="ex. 11, 23, 22",
                                                label="적용할 특정 페이지",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="페이지 배경",
                    ),
                ),
                (
                    "attach_contents",
                    models.BooleanField(default=True, verbose_name="목차 페이지 첨부"),
                ),
                ("css", models.TextField(blank=True, null=True, verbose_name="CSS")),
            ],
            options={
                "verbose_name": "카탈로그",
                "verbose_name_plural": "카탈로그",
            },
            bases=("wagtailcore.page", hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name="CatalogProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "catalog",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programs",
                        to="catalog.catalogpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
